// http://ionicframework.com/docs/theming/


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
.has-header
{
   top: 82px;//your headers height
   .scroll-content{
    margin-bottom: 6rem
   }
   
}

.toolbar-content-md{
    display: flex;
}

/* alerts */
.alertInfo{
    
    .alert-wrapper{
        background-color:white !important;
        color: black !important;
        .alert-head{
            background-color: map-get($colors,primary) !important;
            color:white;
           
        }
    }
    
    .alert-message{
        
        color: #333 !important;
        
    }
    button{
        color:map-get($colors,primary) !important;
    }
}

.alertDanger{
    .alert-wrapper{
        .alert-head{
            background-color: black !important;
            color:white;
                        
        }
        background-color:#333 !important;
        color: red !important;
    }
    
    .alert-message{
        
        color: white !important;
        
    }
    button{
        color:map-get($colors,danger)!important;
    }
}

.alert{
    .alert-wrapper{
        .alert-head{
            h2{
                font-size: 1.9rem;
            }
        }
        
    }
    
    .alert-message{
        margin-top: 2rem;
        overflow: auto !important;
    }
   
}
ion-fab[bottom]{
    bottom:120px;
}
ion-fab[right]{
    right:3rem;
}
ion-fab[left]{
    left:3rem;
}

// Applied by the showWhen directive
.hidden-show-when {
    display: none !important;
  }
  
  // Applied by the hideWhen directive
  .hidden-hide-when {
    display: none !important;
  }
  .button{
      border-radius: 20px;
  }

